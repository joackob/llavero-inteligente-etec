
This directory is intended for project specific (private) libraries.
PlatformIO will compile them to static libraries and link into executable file.

The source code of each library should be placed in an own separate directory
("lib/your_library_name/[here are source files]").

For example, see a structure of the following two libraries `Foo` and `Bar`:

|--lib
|  |
|  |--Bar
|  |  |--docs
|  |  |--examples
|  |  |--src
|  |     |- Bar.c
|  |     |- Bar.h
|  |  |- library.json (optional, custom build options, etc) https://docs.platformio.org/page/librarymanager/config.html
|  |
|  |--Foo
|  |  |- Foo.c
|  |  |- Foo.h
|  |
|  |- README --> THIS FILE
|
|- platformio.ini
|--src
   |- main.c

and a contents of `src/main.c`:
```
#include <Foo.h>
#include <Bar.h>

int main (void)
{
  ...
}

```

PlatformIO Library Dependency Finder will find automatically dependent
libraries scanning project source files.

More information about PlatformIO Library Dependency Finder
- https://docs.platformio.org/page/librarymanager/ldf.html


Por cuestiones de seguridad y del lenguaje en los archivos que terminan archivo.h se definen las funciones, en los archivo.cpp se define como funciona determinada funcion 

Al crear un objeto, se necesita crear un constructor (el que crea el objeto): Por ejemplo si el objeto
se llama Objeto , el constructor tiene el mismo nombre de la clase: Objeto() {}; y el destructor es
igual al constructor pero con  ~Objeto() {};

Public significa que se puede acceder a esa propiedad del objeto desde cualquier otro lado de la aplicacion, por ejemplo un constructor va a tener que ir si o si en public para crear

Falta seguir comentando funcionalidades

Y hacer un codigo principal 

